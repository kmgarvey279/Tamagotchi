{"version":3,"sources":["assets/images/toy.png","assets/images/sleep.png","assets/images/food.png","assets/images/Charmander.png","assets/images/Bulbasaur.png","assets/images/Squirtle.png","assets/images/Charmeleon.png","assets/images/Charizard.png","assets/images/MegaCharizard.png","assets/images/Ivysaur.png","assets/images/Venusaur.png","assets/images/MegaVenusaur.png","assets/images/Wartortle.png","assets/images/Blastoise.png","assets/images/MegaBlastoise.png","components/Header.jsx","components/Tamagotchi.jsx","components/TamagotchiDetail.jsx","components/TamagotchiList.jsx","components/NewTamagotchiForm.jsx","components/Error404.jsx","index.jsx","components/App.jsx"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","id","jsx","react_router_dom","to","Tamagotchi","props","tamagotchiInformation","name","type","stage","image","formattedTimePassed","experence","happiness","happinessStatus","hunger","hungerStatus","tiredness","tirednessStatus","tamagotchiActions","src","toy","weight","height","onClick","onPlayButtonClick","tamagotchiId","sleep","onSleepButtonClick","food","onFeedButtonClick","status","onTamagotchiSelection","TamagotchiDetail","selectedTamagotchi","propTypes","tamagotchiList","PropTypes","object","func","TamagotchiList","optionalSelectedTamagotchiContent","components_TamagotchiDetail","Object","keys","map","tamagotchi","components_Tamagotchi","key","NewTamagotchiForm","_name","_type","onSubmit","event","preventDefault","value","charmander","bulbasaur","squirtle","onNewTamagotchiCreation","timeOpen","Moment","placeholder","ref","input","select","Error404","Component","location","pathname","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","masterTamagotchiList","handleAddingNewTamagotchiToList","bind","assertThisInitialized","handleChangingSelectedTamagotchi","feed","play","_this2","timePassedUpdateTimer","setInterval","updateTamagotchiTime","clearInterval","_this3","newMasterTamagotchiList","assign","forEach","fromNow","updateHunger","updateTiredness","updateHappiness","evolve","setState","charmeleon","charizard","megacharizard","wartortle","blastoise","megablastoise","ivysaur","venusaur","megavenusaur","newTamagotchi","newTamagotchiId","v4","defineProperty","_this4","components_Header","react_router","exact","path","render","components_TamagotchiList","components_NewTamagotchiForm","component","React","ReactDOM","react_hot_loader","document","getElementById"],"mappings":"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","file":"static/js/main.ed0484d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/toy.1379ef43.png\";","module.exports = __webpack_public_path__ + \"static/media/sleep.b10715d5.png\";","module.exports = __webpack_public_path__ + \"static/media/food.8051dbd3.png\";","module.exports = __webpack_public_path__ + \"static/media/Charmander.e64aacb1.png\";","module.exports = __webpack_public_path__ + \"static/media/Bulbasaur.02db60fa.png\";","module.exports = __webpack_public_path__ + \"static/media/Squirtle.13b11857.png\";","module.exports = __webpack_public_path__ + \"static/media/Charmeleon.c7f79232.png\";","module.exports = __webpack_public_path__ + \"static/media/Charizard.0e45456f.png\";","module.exports = __webpack_public_path__ + \"static/media/MegaCharizard.6c8956b2.png\";","module.exports = __webpack_public_path__ + \"static/media/Ivysaur.14732b63.png\";","module.exports = __webpack_public_path__ + \"static/media/Venusaur.a5ceabea.png\";","module.exports = __webpack_public_path__ + \"static/media/MegaVenusaur.a26050b1.png\";","module.exports = __webpack_public_path__ + \"static/media/Wartortle.0c391347.png\";","module.exports = __webpack_public_path__ + \"static/media/Blastoise.3b47f107.png\";","module.exports = __webpack_public_path__ + \"static/media/MegaBlastoise.11724ee2.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header(){\n  return (\n    <div id=\"header\">\n      <style jsx>{`\n        div#header {\n          background-color:red;\n          border: solid black 2px;\n          text-align: center;\n        }\n        div#nav {\n          background-color: white;\n          border: solid white 2px;\n        }\n      `}</style>\n      <h1>Tamagotchi</h1>\n      <div id=\"nav\">\n        <Link to=\"/\">Home</Link> | <Link to=\"/newtamagotchi\">Create New Tamagotchi</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport toy from '../assets/images/toy.png';\nimport sleep from '../assets/images/sleep.png';\nimport food from '../assets/images/food.png';\n\n\nfunction Tamagotchi(props){\n\n  const tamagotchiInformation =\n    <div id=\"info\">\n      <h3>Name: {props.name}</h3>\n      <h4>Type: {props.type} Stage: {props.stage}/4</h4>\n      {props.image}\n      <h4>Time since adoption: {props.formattedTimePassed}</h4>\n      <h4>Experence: {props.experence}</h4>\n      <h5>Current Happiness Level: {props.happiness} {props.happinessStatus}</h5>\n      <h5>Current Hunger Level: {props.hunger} {props.hungerStatus}</h5>\n      <h5>Current Tiredness Level: {props.tiredness} {props.tirednessStatus}</h5>\n    </div>;\n\n    const tamagotchiActions =\n    <div id=\"actions\">\n      <h3>Actions</h3>\n      <div id=\"play\">\n        <h3>Play</h3>\n        <img src={toy} weight=\"75\" height=\"75\" onClick={() => {props.onPlayButtonClick(props.tamagotchiId);}}/>\n      </div>\n      <div id=\"sleep\">\n        <h3>Sleep</h3>\n        <img src={sleep} weight=\"75\" height=\"75\" onClick={() => {props.onSleepButtonClick(props.tamagotchiId);}}/>\n      </div>\n      <div id=\"feed\">\n        <h3>Feed</h3>\n        <img src={food} weight=\"75\" height=\"75\" onClick={() => {props.onFeedButtonClick(props.tamagotchiId);}}/>\n      </div>\n    </div>;\n\n//conditional styling\n    if (props.status == \"dead\") {\n      return (\n        <div id=\"dead\" onClick={() => {props.onTamagotchiSelection(props.tamagotchiId);}}>\n          <style jsx>{`\n            div#dead {\n              background-color: gray;\n              filter: gray;\n              -webkit-filter: grayscale(1);\n              filter: grayscale(1);\n              break-inside: avoid-column;\n              text-align: center;\n              columns: 2 auto;\n              border: solid darkgray 5px;\n              margin-bottom 10px;\n            }\n            div#info {\n              break-inside: avoid-column;\n            }\n            div#actions {\n              break-inside: avoid-column;\n            }\n            div#sleep {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: blue;\n            }\n            div#play {\n              margin-top: 20px;\n              margin-bottom: 10px;\n              background-color: yellow;\n            }\n            div#feed {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: red;\n            }\n          `}</style>\n            {tamagotchiInformation}\n            {tamagotchiActions}\n        </div>\n      );\n    } else if (props.happiness < 5 || props.hunger > 15  || props.tiredness > 15) {\n      return (\n        <div id=\"warning\" onClick={() => {props.onTamagotchiSelection(props.tamagotchiId);}}>\n          <style jsx>{`\n            div#warning {\n              background-color: FireBrick;\n              text-align: center;\n              columns: 2 auto;\n              border: solid darkred 5px;\n              margin-bottom 10px;\n            }\n            div#info {\n              break-inside: avoid-column;\n            }\n            div#actions {\n              break-inside: avoid-column;\n            }\n            div#sleep {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: blue;\n            }\n            div#play {\n              margin-top: 20px;\n              margin-bottom: 10px;\n              background-color: yellow;\n            }\n            div#feed {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: red;\n            }\n          `}</style>\n          {tamagotchiInformation}\n          {tamagotchiActions}\n        </div>\n      );\n    } else if (props.type == \"Squirtle\") {\n      return (\n        <div id=\"squirtle\" onClick={() => {props.onTamagotchiSelection(props.tamagotchiId);}}>\n          <style jsx>{`\n            div#squirtle {\n              background-color: lightblue;\n              border: solid blue 5px;\n              text-align: center;\n              columns: 2 auto;\n              margin-bottom 10px;\n            }\n            div#info {\n              break-inside: avoid-column;\n            }\n            div#actions {\n              break-inside: avoid-column;\n            }\n            div#sleep {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: blue;\n            }\n            div#play {\n              margin-top: 20px;\n              margin-bottom: 10px;\n              background-color: yellow;\n            }\n            div#feed {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: red;\n            }\n          `}</style>\n          {tamagotchiInformation}\n          {tamagotchiActions}\n        </div>\n      );\n    } else if (props.type == \"Wartortle\") {\n      return (\n        <div id=\"wartortle\" onClick={() => {props.onTamagotchiSelection(props.tamagotchiId);}}>\n          <style jsx>{`\n            div#wartortle {\n              background-color: lightskyblue;\n              border: solid blue 5px;\n              text-align: center;\n              columns: 2 auto;\n              margin-bottom 10px;\n            }\n            div#info {\n              break-inside: avoid-column;\n            }\n            div#actions {\n              break-inside: avoid-column;\n            }\n            div#sleep {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: blue;\n            }\n            div#play {\n              margin-top: 20px;\n              margin-bottom: 10px;\n              background-color: yellow;\n            }\n            div#feed {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: red;\n            }\n          `}</style>\n          {tamagotchiInformation}\n          {tamagotchiActions}\n        </div>\n      );\n    } else if (props.type == \"Blastoise\") {\n      return (\n        <div id=\"blastoise\" onClick={() => {props.onTamagotchiSelection(props.tamagotchiId);}}>\n          <style jsx>{`\n            div#blastoise {\n              background-color: dodgerblue;\n              border: solid blue 5px;\n              text-align: center;\n              columns: 2 auto;\n              margin-bottom 10px;\n            }\n            div#info {\n              break-inside: avoid-column;\n            }\n            div#actions {\n              break-inside: avoid-column;\n            }\n            div#sleep {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: blue;\n            }\n            div#play {\n              margin-top: 20px;\n              margin-bottom: 10px;\n              background-color: yellow;\n            }\n            div#feed {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: red;\n            }\n          `}</style>\n          {tamagotchiInformation}\n          {tamagotchiActions}\n        </div>\n      );\n    } else if (props.type == \"Mega Blastoise\") {\n      return (\n        <div id=\"megablastoise\" onClick={() => {props.onTamagotchiSelection(props.tamagotchiId);}}>\n          <style jsx>{`\n            div#megablastoise {\n              background-color: steelblue;\n              border: solid blue 5px;\n              text-align: center;\n              columns: 2 auto;\n              margin-bottom 10px;\n            }\n            div#info {\n              break-inside: avoid-column;\n            }\n            div#actions {\n              break-inside: avoid-column;\n            }\n            div#sleep {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: blue;\n            }\n            div#play {\n              margin-top: 20px;\n              margin-bottom: 10px;\n              background-color: yellow;\n            }\n            div#feed {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: red;\n            }\n          `}</style>\n          {tamagotchiInformation}\n          {tamagotchiActions}\n        </div>\n      );\n    } else if (props.type == \"Charmander\") {\n      return (\n        <div id=\"charmander\" onClick={() => {props.onTamagotchiSelection(props.tamagotchiId);}}>\n          <style jsx>{`\n            div#charmander {\n              background-color: lightsalmon;\n              text-align: center;\n              columns: 2 auto;\n              border: solid red 5px;\n              margin-bottom 10px;\n            }\n            div#info {\n              break-inside: avoid-column;\n            }\n            div#actions {\n              break-inside: avoid-column;\n            }\n            div#sleep {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: blue;\n            }\n            div#play {\n              margin-top: 20px;\n              margin-bottom: 10px;\n              background-color: yellow;\n            }\n            div#feed {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: red;\n            }\n          `}</style>\n          {tamagotchiInformation}\n          {tamagotchiActions}\n        </div>\n      );\n    } else if (props.type == \"Charmeleon\") {\n      return (\n        <div id=\"charmeleon\" onClick={() => {props.onTamagotchiSelection(props.tamagotchiId);}}>\n          <style jsx>{`\n            div#charmeleon {\n              background-color: darkorange;\n              text-align: center;\n              columns: 2 auto;\n              border: solid red 5px;\n              margin-bottom 10px;\n            }\n            div#info {\n              break-inside: avoid-column;\n            }\n            div#actions {\n              break-inside: avoid-column;\n            }\n            div#sleep {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: blue;\n            }\n            div#play {\n              margin-top: 20px;\n              margin-bottom: 10px;\n              background-color: yellow;\n            }\n            div#feed {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: red;\n            }\n          `}</style>\n          {tamagotchiInformation}\n          {tamagotchiActions}\n        </div>\n      );\n    } else if (props.type == \"Charizard\") {\n      return (\n        <div id=\"charizard\" onClick={() => {props.onTamagotchiSelection(props.tamagotchiId);}}>\n          <style jsx>{`\n            div#charizard {\n              background-color: red;\n              text-align: center;\n              columns: 2 auto;\n              border: solid red 5px;\n              margin-bottom 10px;\n            }\n            div#info {\n              break-inside: avoid-column;\n            }\n            div#actions {\n              break-inside: avoid-column;\n            }\n            div#sleep {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: blue;\n            }\n            div#play {\n              margin-top: 20px;\n              margin-bottom: 10px;\n              background-color: yellow;\n            }\n            div#feed {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: red;\n            }\n          `}</style>\n          {tamagotchiInformation}\n          {tamagotchiActions}\n        </div>\n      );\n    } else if (props.type == \"Mega Charazard\") {\n      return (\n        <div id=\"megacharizard\" onClick={() => {props.onTamagotchiSelection(props.tamagotchiId);}}>\n          <style jsx>{`\n            div#megacharizard {\n              background-color: darkred;\n              text-align: center;\n              columns: 2 auto;\n              border: solid red 5px;\n              margin-bottom 10px;\n            }\n            div#info {\n              break-inside: avoid-column;\n            }\n            div#actions {\n              break-inside: avoid-column;\n            }\n            div#sleep {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: blue;\n            }\n            div#play {\n              margin-top: 20px;\n              margin-bottom: 10px;\n              background-color: yellow;\n            }\n            div#feed {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: red;\n            }\n          `}</style>\n          {tamagotchiInformation}\n          {tamagotchiActions}\n        </div>\n      );\n    } else if (props.type == \"Bulbasaur\") {\n      return (\n        <div id=\"bulbasaur\" onClick={() => {props.onTamagotchiSelection(props.tamagotchiId);}}>\n          <style jsx>{`\n            div#bulbasaur {\n              background-color: lightgreen;\n              text-align: center;\n              columns: 2 auto;\n              border: solid green 5px;\n              margin-bottom 10px;\n            }\n            div#info {\n              break-inside: avoid-column;\n            }\n            div#actions {\n              break-inside: avoid-column;\n            }\n            div#sleep {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: blue;\n            }\n            div#play {\n              margin-top: 20px;\n              margin-bottom: 10px;\n              background-color: yellow;\n            }\n            div#feed {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: red;\n            }\n          `}</style>\n          {tamagotchiInformation}\n          {tamagotchiActions}\n        </div>\n      );\n    } else if (props.type == \"Ivysaur\") {\n      return (\n        <div id=\"ivysaur\" onClick={() => {props.onTamagotchiSelection(props.tamagotchiId);}}>\n          <style jsx>{`\n            div#ivysaur {\n              background-color: mediumseagreen;\n              text-align: center;\n              columns: 2 auto;\n              border: solid green 5px;\n              margin-bottom 10px;\n            }\n            div#info {\n              break-inside: avoid-column;\n            }\n            div#actions {\n              break-inside: avoid-column;\n            }\n            div#sleep {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: blue;\n            }\n            div#play {\n              margin-top: 20px;\n              margin-bottom: 10px;\n              background-color: yellow;\n            }\n            div#feed {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: red;\n            }\n          `}</style>\n          {tamagotchiInformation}\n          {tamagotchiActions}\n        </div>\n      );\n    } else if (props.type == \"Venusaur\") {\n      return (\n        <div id=\"venusaur\" onClick={() => {props.onTamagotchiSelection(props.tamagotchiId);}}>\n          <style jsx>{`\n            div#venusaur {\n              background-color: seagreen;\n              text-align: center;\n              columns: 2 auto;\n              border: solid green 5px;\n              margin-bottom 10px;\n            }\n            div#info {\n              break-inside: avoid-column;\n            }\n            div#actions {\n              break-inside: avoid-column;\n            }\n            div#sleep {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: blue;\n            }\n            div#play {\n              margin-top: 20px;\n              margin-bottom: 10px;\n              background-color: yellow;\n            }\n            div#feed {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: red;\n            }\n          `}</style>\n          {tamagotchiInformation}\n          {tamagotchiActions}\n        </div>\n      );\n    } else if (props.type == \"Mega Venusaur\") {\n      return (\n        <div id=\"megavenusaur\" onClick={() => {props.onTamagotchiSelection(props.tamagotchiId);}}>\n          <style jsx>{`\n            div#megavenusaur {\n              background-color: darkgreen;\n              text-align: center;\n              columns: 2 auto;\n              border: solid green 5px;\n              margin-bottom 10px;\n            }\n            div#info {\n              break-inside: avoid-column;\n            }\n            div#actions {\n              break-inside: avoid-column;\n            }\n            div#sleep {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: blue;\n            }\n            div#play {\n              margin-top: 20px;\n              margin-bottom: 10px;\n              background-color: yellow;\n            }\n            div#feed {\n              margin-bottom: 10px;\n              margin-top: 10px;\n              background-color: red;\n            }\n          `}</style>\n          {tamagotchiInformation}\n          {tamagotchiActions}\n        </div>\n      );\n    }\n  }\n\nTamagotchi.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  formattedTimePassed: PropTypes.string.isRequired,\n  happiness: PropTypes.number.isRequired,\n  hunger: PropTypes.number.isRequired,\n  tiredness: PropTypes.number.isRequired,\n  stage: PropTypes.number.isRequired,\n  image: PropTypes.string.isRequired,\n  experence: PropTypes.number.isRequired,\n  status: PropTypes.string.isRequired,\n  happinessStatus: PropTypes.string.isRequired,\n  hungerStatus: PropTypes.string.isRequired,\n  tirednessStatus: PropTypes.string.isRequired,\n  onTamagotchiSelection: PropTypes.func,\n  onPlayButtonClick: PropTypes.func,\n  onFeedButtonClick: PropTypes.func,\n  onSleepButtonClick: PropTypes.func,\n  tamagotchiId: PropTypes.string.isRequired\n};\n\nexport default Tamagotchi;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TamagotchiDetail(props){\n  return (\n    <div id=\"detail\">\n    <style jsx>{`\n      div#detail {\n        background-color: yellow;\n        border: solid orange 5px;\n      }\n    `}</style>\n      <h2>Pokemon Details:</h2>\n      <h4>Name: {props.selectedTamagotchi.name}</h4>\n      <h4>Type: {props.selectedTamagotchi.type}</h4>\n      <h4>Stage: {props.selectedTamagotchi.stage}/4</h4>\n      <h4>Exp: {props.selectedTamagotchi.experence}/20</h4>\n      <h4>Time since adoption: {props.selectedTamagotchi.formattedTimePassed}</h4>\n      <h4>Status: {props.selectedTamagotchi.status}</h4>\n      <h4>Happiness: {props.selectedTamagotchi.happiness}</h4>\n      <h4>Tiredness: {props.selectedTamagotchi.tiredness}</h4>\n      <h4>Hunger: {props.selectedTamagotchi.hunger}</h4>\n    </div>\n  );\n}\n\n\nTamagotchiDetail.propTypes = {\n  selectedTamagotchi: PropTypes.object,\n};\n\nexport default TamagotchiDetail;\n","import React from 'react';\nimport Tamagotchi from './Tamagotchi';\nimport PropTypes from 'prop-types';\nimport TamagotchiDetail from './TamagotchiDetail';\n\n\nfunction TamagotchiList(props){\n  let optionalSelectedTamagotchiContent = null;\n  if (props.selectedTamagotchi != null) {\n    optionalSelectedTamagotchiContent = <TamagotchiDetail selectedTamagotchi={props.tamagotchiList[props.selectedTamagotchi]}/>;\n  }\n  return (\n    <div>\n\n      {optionalSelectedTamagotchiContent}\n      {Object.keys(props.tamagotchiList).map(function(tamagotchiId) {\n        var tamagotchi = props.tamagotchiList[tamagotchiId];\n        return <Tamagotchi name={tamagotchi.name}\n          type={tamagotchi.type}\n          formattedTimePassed={tamagotchi.formattedTimePassed}\n          happiness={tamagotchi.happiness}\n          hunger={tamagotchi.hunger}\n          tiredness={tamagotchi.tiredness}\n          stage={tamagotchi.stage}\n          image={tamagotchi.image}\n          experence={tamagotchi.experence}\n          status={tamagotchi.status}\n          hungerStatus={tamagotchi.hungerStatus}\n          tirednessStatus={tamagotchi.tirednessStatus}\n          happinessStatus={tamagotchi.happinessStatus}\n          key={tamagotchi.id}\n          onTamagotchiSelection={props.onTamagotchiSelection}\n          onPlayButtonClick={props.onPlayButtonClick}\n          onFeedButtonClick={props.onFeedButtonClick}\n          onSleepButtonClick={props.onSleepButtonClick}\n          tamagotchiId={tamagotchiId}/>;\n      })}\n    </div>\n  );\n}\n\nTamagotchi.propTypes = {\n  tamagotchiList: PropTypes.object,\n  onTamagotchiSelection: PropTypes.func,\n  onPlayButtonClick: PropTypes.func,\n  onFeedButtonClick: PropTypes.func,\n  onSleepButtonClick: PropTypes.func\n};\n\nexport default TamagotchiList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'moment';\nimport charmander from '../assets/images/Charmander.png';\nimport bulbasaur from '../assets/images/Bulbasaur.png';\nimport squirtle from '../assets/images/Squirtle.png';\n\nfunction NewTamagotchiForm(props){\n  let _name = null;\n  let _type = null;\n\n  function handleNewTamagotchiFormSubmission(event) {\n    event.preventDefault();\n    let image = '';\n    if (_type.value == 'Charmander'){\n      image = <img src={charmander} weight=\"200\" height=\"200\"/>;\n    } else if (_type.value == 'Bulbasaur'){\n      image = <img src={bulbasaur} weight=\"200\" height=\"200\"/>;\n    } else if (_type.value == 'Squirtle'){\n      image = <img src={squirtle} weight=\"200\" height=\"200\"/>;\n    }\n    props.onNewTamagotchiCreation({name: _name.value, type: _type.value, timeOpen: new Moment(), happiness: 15, tiredness: 1, hunger: 1, stage: 1, image, experence: 0, status: \"alive\", happinessStatus: \"Happy\", hungerStatus: \"Full\", tirednessStatus: \"Rested\"});\n    _name.value = '';\n    _type.value = '';\n  }\n\n  function handleChange(event){\n    ;\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleNewTamagotchiFormSubmission}>\n        <input\n          type='text'\n          id='name'\n          placeholder='Name'\n          ref={(input) => {_name = input;}}/>\n        <select\n          type='text'\n          id='type'\n          ref={select => {_type = select}}>\n            <option value=\"Bulbasaur\">Bulbasaur</option>\n            <option value=\"Charmander\">Charmander</option>\n            <option value=\"Squirtle\">Squirtle</option>\n          </select>\n        <button type='submit'>Create Tamagotchi</button>\n      </form>\n    </div>\n    );\n  }\n\n  NewTamagotchiForm.propTypes = {\n    onNewTamagotchiCreation: PropTypes.func,\n    handleChange: PropTypes.func\n  };\n\nexport default NewTamagotchiForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction Error404(props){\n  return (\n    <div>\n      <h2>The page {props.location.pathname} does not exist!</h2>\n      <h3>Would you like to return <Link to=\"/\">home</Link> instead?</h3>\n    </div>\n  );\n}\n\nError404.propTypes = {\n  location: PropTypes.object\n};\n\nexport default Error404;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { AppContainer } from 'react-hot-loader';\nimport { HashRouter } from 'react-router-dom';\n\nconst render = (Component) => {\n  ReactDOM.render(\n    <AppContainer>\n      <HashRouter>\n        <Component/>\n      </HashRouter>\n    </AppContainer>,\n    document.getElementById('react-app-root')\n  );\n};\n\nrender(App);\n\n/*eslint-disable */\nif (module.hot) {\n  module.hot.accept('./components/App', () => {\n    render(App);\n  });\n}\n/*eslint-enable */","import React from 'react';\nimport Header from './Header';\nimport TamagotchiList from './TamagotchiList';\nimport NewTamagotchiForm from './NewTamagotchiForm';\nimport Error404 from './Error404';\nimport { Switch, Route } from 'react-router-dom';\nimport Moment from 'moment';\nimport { v4 } from 'uuid';\n//Charmander Line Images\nimport charmeleon from '../assets/images/Charmeleon.png';\nimport charizard from '../assets/images/Charizard.png';\nimport megacharizard from '../assets/images/MegaCharizard.png';\n//Bulbasaur Line Images\nimport ivysaur from '../assets/images/Ivysaur.png';\nimport venusaur from '../assets/images/Venusaur.png';\nimport megavenusaur from '../assets/images/MegaVenusaur.png';\n//Squirtle Line Images\nimport wartortle from '../assets/images/Wartortle.png';\nimport blastoise from '../assets/images/Blastoise.png';\nimport megablastoise from '../assets/images/MegaBlastoise.png';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      masterTamagotchiList: {},\n      selectedTamagotchi: null\n    };\n    this.handleAddingNewTamagotchiToList = this.handleAddingNewTamagotchiToList.bind(this);\n    this.handleChangingSelectedTamagotchi = this.handleChangingSelectedTamagotchi.bind(this);\n    this.feed = this.feed.bind(this);\n    this.sleep = this.sleep.bind(this);\n    this.play = this.play.bind(this);\n  }\n\n  componentDidMount() {\n    this.timePassedUpdateTimer = setInterval(() =>\n      this.updateTamagotchiTime(),\n    6000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timePassedUpdateTimer);\n  }\n\n  updateTamagotchiTime() {\n    var newMasterTamagotchiList = Object.assign({}, this.state.masterTamagotchiList);\n    Object.keys(newMasterTamagotchiList).forEach(tamagotchiId => {\n      if (newMasterTamagotchiList[tamagotchiId].status == 'alive') {\n        newMasterTamagotchiList[tamagotchiId].formattedTimePassed = newMasterTamagotchiList[tamagotchiId].timeOpen.fromNow(true);\n        newMasterTamagotchiList[tamagotchiId].experence = newMasterTamagotchiList[tamagotchiId].experence + 1;\n        newMasterTamagotchiList[tamagotchiId].hunger = newMasterTamagotchiList[tamagotchiId].hunger + 1;\n        newMasterTamagotchiList[tamagotchiId].happiness = newMasterTamagotchiList[tamagotchiId].happiness - 1;\n        newMasterTamagotchiList[tamagotchiId].tiredness = newMasterTamagotchiList[tamagotchiId].tiredness + 1;\n        this.updateHunger(tamagotchiId);\n        this.updateTiredness(tamagotchiId);\n        this.updateHappiness(tamagotchiId);\n        this.evolve(tamagotchiId);\n      }\n    });\n    this.setState({masterTamagotchiList: newMasterTamagotchiList});\n  }\n\nupdateHunger(id) {\n  var newMasterTamagotchiList = Object.assign({}, this.state.masterTamagotchiList);\n    if (newMasterTamagotchiList[id].hunger >=20) {\n      newMasterTamagotchiList[id].hungerStatus = \"dead\";\n      newMasterTamagotchiList[id].status = \"dead\";\n    }\n    else if (newMasterTamagotchiList[id].hunger >= 15) {\n      newMasterTamagotchiList[id].hungerStatus = \"very hungry\";\n    }\n    else if (newMasterTamagotchiList[id].hunger >= 10) {\n      newMasterTamagotchiList[id].hungerStatus = \"hungry\";\n  }\n}\n\n  updateHappiness(id) {\n    var newMasterTamagotchiList = Object.assign({}, this.state.masterTamagotchiList);\n      if (newMasterTamagotchiList[id].happiness <= 0) {\n        newMasterTamagotchiList[id].happinessStatus = \"Dead\"\n        newMasterTamagotchiList[id].status = \"dead\";\n      }\n      else if (newMasterTamagotchiList[id].happiness <= 5) {\n        newMasterTamagotchiList[id].happinessStatus = \"Very unhappy\";\n      }\n      else if (newMasterTamagotchiList[id].happiness <= 10) {\n        newMasterTamagotchiList[id].happinessStatus = \"Unhappy\";\n    }\n  }\n\n  updateTiredness(id) {\n    var newMasterTamagotchiList = Object.assign({}, this.state.masterTamagotchiList);\n      if (newMasterTamagotchiList[id].tiredness >= 20) {\n        newMasterTamagotchiList[id].tirednessStatus = \"Dead\";\n        newMasterTamagotchiList[id].status = \"dead\";\n      }\n      else if (newMasterTamagotchiList[id].tiredness >= 15) {\n        newMasterTamagotchiList[id].tirednessStatus = \"Very Tired\";\n      }\n      else if (newMasterTamagotchiList[id].hunger >= 10) {\n        newMasterTamagotchiList[id].tirednessStatus = \"Tired\";\n    }\n  }\n\n  evolve(id){\n    var newMasterTamagotchiList = Object.assign({}, this.state.masterTamagotchiList);\n      if (newMasterTamagotchiList[id].experence >= 10 || newMasterTamagotchiList[id].stage > 4) {\n        newMasterTamagotchiList[id].stage = newMasterTamagotchiList[id].stage + 1;\n        newMasterTamagotchiList[id].experence = 0;\n        //Charmander Line Evolutions\n        if (newMasterTamagotchiList[id].type == 'Charmander') {\n          newMasterTamagotchiList[id].type = 'Charmeleon';\n          newMasterTamagotchiList[id].image = <img src={charmeleon} weight=\"200\" height=\"200\"/>\n        }\n        else if (newMasterTamagotchiList[id].type == 'Charmeleon') {\n          newMasterTamagotchiList[id].type = 'Charizard';\n          newMasterTamagotchiList[id].image = <img src={charizard} weight=\"200\" height=\"200\"/>\n        }\n        else if (newMasterTamagotchiList[id].type == 'charizard') {\n          newMasterTamagotchiList[id].type = 'Mega Charazard';\n          newMasterTamagotchiList[id].image = <img src={megacharizard} weight=\"200\" height=\"200\"/>\n        }\n        //Squirtle Line Evolutions\n        if (newMasterTamagotchiList[id].type == 'Squirtle') {\n          newMasterTamagotchiList[id].type = 'Wartortle';\n          newMasterTamagotchiList[id].image = <img src={wartortle} weight=\"200\" height=\"200\"/>\n        }\n        else if (newMasterTamagotchiList[id].type == 'Wartortle') {\n          newMasterTamagotchiList[id].type = 'Blastoise';\n          newMasterTamagotchiList[id].image = <img src={blastoise} weight=\"200\" height=\"200\"/>\n        }\n        else if (newMasterTamagotchiList[id].type == 'Blastoise') {\n          newMasterTamagotchiList[id].type = 'Mega Blastoise';\n          newMasterTamagotchiList[id].image = <img src={megablastoise} weight=\"200\" height=\"200\"/>\n        }\n        //Bulbasaur Line Evolutions\n        if (newMasterTamagotchiList[id].type == 'Bulbasaur') {\n          newMasterTamagotchiList[id].type = 'Ivysaur';\n          newMasterTamagotchiList[id].image = <img src={ivysaur} weight=\"200\" height=\"200\"/>\n        }\n        else if (newMasterTamagotchiList[id].type == 'Ivysaur') {\n          newMasterTamagotchiList[id].type = 'Venusaur';\n          newMasterTamagotchiList[id].image = <img src={venusaur} weight=\"200\" height=\"200\"/>\n        }\n        else if (newMasterTamagotchiList[id].type == 'Venusaur') {\n          newMasterTamagotchiList[id].type = 'Mega Venusaur';\n          newMasterTamagotchiList[id].image = <img src={megavenusaur} weight=\"200\" height=\"200\"/>\n        }\n      }\n    }\n\n\n  handleAddingNewTamagotchiToList(newTamagotchi){\n    var newTamagotchiId = v4();\n    var newMasterTamagotchiList = Object.assign({}, this.state.masterTamagotchiList, {\n      [newTamagotchiId]: newTamagotchi\n    });\n    newMasterTamagotchiList[newTamagotchiId].formattedTimePassed = newMasterTamagotchiList[newTamagotchiId].timeOpen.fromNow(true);\n    this.setState({masterTamagotchiList: newMasterTamagotchiList});\n  }\n\n  handleChangingSelectedTamagotchi(newTamagotchiId){\n    this.setState({selectedTamagotchi: newTamagotchiId});\n  }\n\n  play(id) {\n    var newMasterTamagotchiList = Object.assign({}, this.state.masterTamagotchiList);\n    if (newMasterTamagotchiList[id].happiness > 15){\n      newMasterTamagotchiList[id].happiness = 20;\n    } else {\n      newMasterTamagotchiList[id].happiness = newMasterTamagotchiList[id].happiness + 5;\n    }\n  }\n\n  feed(id) {\n    var newMasterTamagotchiList = Object.assign({}, this.state.masterTamagotchiList);\n    if (newMasterTamagotchiList[id].hunger < 5) {\n      newMasterTamagotchiList[id].hunger = 0;\n    } else {\n      newMasterTamagotchiList[id].hunger = newMasterTamagotchiList[id].hunger - 5;\n    }\n  }\n\n  sleep(id) {\n    var newMasterTamagotchiList = Object.assign({}, this.state.masterTamagotchiList);\n    if (newMasterTamagotchiList[id].tiredness < 5) {\n      newMasterTamagotchiList[id].tiredness = 0;\n    } else {\n      newMasterTamagotchiList[id].tiredness = newMasterTamagotchiList[id].sleep - 5;\n    }\n  }\n\n  render(){\n    return (\n      <div>\n        <Header/>\n        <Switch>\n          <Route exact path='/' render={()=><TamagotchiList tamagotchiList={this.state.masterTamagotchiList} onTamagotchiSelection={this.handleChangingSelectedTamagotchi} onFeedButtonClick={(id) => this.feed(id)} onPlayButtonClick={(id) => this.play(id)} onSleepButtonClick={(id) => this.sleep(id)} selectedTamagotchi={this.state.selectedTamagotchi} />} />\n          <Route path='/newtamagotchi' render={()=><NewTamagotchiForm onNewTamagotchiCreation={this.handleAddingNewTamagotchiToList} />} />\n          <Route component={Error404} />\n        </Switch>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"],"sourceRoot":""}